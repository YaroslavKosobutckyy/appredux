{"version":3,"sources":["redux/actions/action-types.js","redux/reducers/index.js","redux/reducers/phoneReducer.js","redux/reducers/valueReducer.js","redux/storeWithMiddleware.js","redux/middleware/logger.js","redux/actions/index.js","redux/actions/phoneActions.js","UserF.js","index.js"],"names":["ADD_NAME","DEL_NAME","combineReducers","names","state","action","type","actionTypes","payload","name","index","newName","value","INCREMENT","store","createStore","reducer","applyMiddleware","next","console","log","JSON","stringify","getState","addName","actions","delName","UserF","props","bind","handleNameChange","handleNameIndexChange","e","this","setState","target","pop","onChange","onClick","handleIncrement","Component","mapDispatchToProps","addPhone","editPhone","increaseValue","increment","connect","phones","ReactDOM","render","document","getElementById"],"mappings":"oMAGe,GACXA,SAJa,WAKbC,SAJa,YCGFC,cAAgB,CAC3BC,MCHwB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACX,KAAKC,EAAYP,SACb,MAAM,GAAN,mBACOI,GADP,CAEIC,EAAOG,QAAQC,OAEvB,KAAKF,EAAYN,SACb,IAAIE,EAAK,YAAOC,GAEhB,OADAD,EAAME,EAAOG,QAAQE,OAASL,EAAOG,QAAQG,QACtCR,EACX,QACI,OAAOC,IDRfQ,MEJwB,WAAwB,IAAvBR,EAAsB,uDAAd,EAAGC,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKC,EAAYM,UACb,OAAOT,EAAQ,EACnB,QACI,OAAOA,MCHNU,EAAQC,YACjBC,EACAC,aCNkB,SAACH,GAAD,OAAW,SAACI,GAAD,OAAU,SAACb,GAIxC,OAHAc,QAAQC,IAAR,mEAA2Bf,EAAOC,OAClCa,QAAQC,IAAR,gIAAsCC,KAAKC,UAAUjB,EAAOG,WAC5DW,QAAQC,IAAR,qFAAmCC,KAAKC,UAAUR,EAAMS,cACjDL,EAAKb,S,uCCDD,GACXmB,QCFmB,SAAAf,GAAI,MAAK,CAC5BH,KAAMmB,EAAQzB,SACdQ,QAAS,CAAEC,UDCXiB,QCImB,SAACf,GAAD,MAAc,CACjCL,KAAMmB,EAAQxB,SACdO,QAAS,CAAEG,c,OCHTgB,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDJ,QAAU,EAAKA,QAAQK,KAAb,gBACf,EAAKH,QAAU,EAAKA,QAAQG,KAAb,gBACf,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKzB,MAAQ,CAAEK,KAAM,IAAKC,MAAO,GANlB,E,oDASnB,SAAiBsB,GACbC,KAAKC,SAAS,CACVzB,KAAMuB,EAAEG,OAAOvB,U,mCAItB,SAAsBoB,GACnBC,KAAKC,SAAS,CACVxB,MAAOsB,EAAEG,OAAOvB,U,qBAIxB,WACIqB,KAAKL,MAAMJ,QAAQS,KAAK7B,MAAMK,Q,qBAGjC,WACGwB,KAAKL,MAAMF,QAAQO,KAAK7B,MAAMK,KAAK2B,S,oBAKvC,WACI,OACI,qCAEI,0CAKA,uBAAOC,SAAUJ,KAAKH,iBAAkBlB,MAAOqB,KAAK7B,MAAMK,OAC1D,uBACA,wBAAQ6B,QAASL,KAAKT,QAAtB,sBACA,wBAAQc,QAASL,KAAKP,QAASd,MAAOqB,KAAK7B,MAAMmC,gBAAjD,gC,GA5CIC,aAuDdC,EAAqB,CACvBC,SAAUjB,EAAQD,QAClBmB,UAAWlB,EAAQC,QACnBkB,cAAenB,EAAQoB,WAKZC,eAbS,SAAA1C,GAAK,MAAK,CAC9B2C,OAAQ3C,EAAMD,MACdS,MAAOR,EAAMQ,SAWuB6B,EAAzBK,CAA6CnB,GC7D5DqB,IAASC,OACL,cAAC,IAAD,CAAUnC,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJoC,SAASC,eAAe,W","file":"static/js/main.0476a0f6.chunk.js","sourcesContent":["const ADD_NAME = 'ADD_NAME';\nconst DEL_NAME = 'DEL_NAME';\n\nexport default {\n    ADD_NAME,\n    DEL_NAME\n}\n\n","import { combineReducers } from \"redux\";\nimport { namesReducer } from \"./phoneReducer\";\nimport { valueReducer } from \"./valueReducer\";\n\nexport default combineReducers({\n    names: namesReducer,\n    value: valueReducer\n});\n","import actionTypes from \"../actions/action-types\";\n\nexport const namesReducer = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.ADD_NAME:\n            return [\n                ...state,\n                action.payload.name\n            ]\n        case actionTypes.DEL_NAME:\n            let names = [...state];\n            names[action.payload.index] = action.payload.newName;\n            return names;\n        default:\n            return state\n    }\n}\n","import actionTypes from \"../actions/action-types\";\n\nexport const valueReducer = (state = 0, action) => {\n    switch (action.type) {\n        case actionTypes.INCREMENT:\n            return state + 1\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers\";\nimport { logger } from \"./middleware/logger\";\n\nexport const store = createStore(\n    reducer,\n    applyMiddleware(logger)\n);\n","export const logger = (store) => (next) => (action) => {\n    console.log(`тип екшина: ${action.type}`);\n    console.log(`додаткові дані екшина: ${JSON.stringify(action.payload)}`);\n    console.log(`стан redux сховища: ${JSON.stringify(store.getState())}`);\n    return next(action);\n}\n","import { addName, delName } from \"./phoneActions\";\n// import { increment } from \"./valueActions\";\n\nexport default {\n    addName,\n    delName\n}\n        ","import actions from \"./action-types\";\n\nexport const addName = name => ({\n    type: actions.ADD_NAME,\n    payload: { name }\n});\n\n// const newName = ''\n\nexport const delName = (newName) => ({\n    type: actions.DEL_NAME,\n    payload: { newName }\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from \"./redux/actions\";\n\nconst Name = ({ n }) => <li>{n}</li>;\n\n// store.subscribe(() => console.log(store.getState()));\n\nclass UserF extends Component {\n    constructor(props) {\n        super(props);\n        this.addName = this.addName.bind(this);\n        this.delName = this.delName.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleNameIndexChange = this.handleNameIndexChange.bind(this);\n        this.state = { name: ' ', index: 0 };\n    }\n\n    handleNameChange(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n     handleNameIndexChange(e) {\n        this.setState({\n            index: e.target.value\n        });\n    } \n\n    addName() {\n        this.props.addName(this.state.name);\n    }\n\n     delName() {\n        this.props.delName(this.state.name.pop() );\n    }\n \n    \n\n    render() {\n        return (\n            <>\n                \n                <h2>My name:</h2>\n                {/*  <ul>\n                    {this.props.names.map(name => <Name n={name} />)}\n                </ul>  */}\n                \n                <input onChange={this.handleNameChange} value={this.state.name} />\n                <br/>\n                <button onClick={this.addName}>add name</button>\n                <button onClick={this.delName} value={this.state.handleIncrement}>delete name</button> \n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    phones: state.names,\n    value: state.value\n});\n\nconst mapDispatchToProps = {\n    addPhone: actions.addName,\n    editPhone: actions.delName,\n    increaseValue: actions.increment\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserF);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/storeWithMiddleware';\nimport UserF from './UserF';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <UserF />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}